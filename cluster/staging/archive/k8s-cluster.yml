apiVersion: v1
kind: PersistentVolume
metadata:
  name: public-data
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
  namespace: kube-demo
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: Secret
metadata:
  name: manager-auth
  namespace: kube-demo
type: Opaque
data:
  username: YWRtaW4K
  password: MTIyMQo=

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: global-config
  namespace: kube-demo
data:
  log.level: info

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-config
  namespace: kube-demo
data:
  NODE_ENV: staging

---
apiVersion: v1
kind: Pod
metadata:
  name: web
  namespace: kube-demo
spec:
  nodeSelector:
    environment: staging
  volumes:
    - name: secrets
      projected:
        sources:
          - secret:
              name: manager-auth
    - name: temp-storage
      emptyDir: {}
  containers:
    - name: kube-demo-stg-web
      image: registry.hub.docker.com/moonlight8978/kube-demo:web
      imagePullPolicy: Always
      resources:
        limits:
          memory: 200Mi
          cpu: 0.4
        requests:
          memory: 100Mi
          cpu: 0.25
      ports:
        - containerPort: 80
          name: "http-server"
      command: ["nginx"]
      args: ["-g", "daemon off;"]
      volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
        - name: temp-storage
          mountPath: /usr/share/nginx/html
      readinessProbe:
        httpGet:
          path: /healthcheck
          port: 80
        initialDelaySeconds: 5
  initContainers:
    - name: install
      image: busybox
      command:
        - wget
        - "-O"
        - "/downloads/index.html"
        - http://kubernetes.io
      volumeMounts:
        - name: temp-storage
          mountPath: /downloads

---
apiVersion: v1
kind: Pod
metadata:
  name: server
  namespace: kube-demo
spec:
  nodeSelector:
    environment: staging
  volumes:
    - name: server-config
      configMap:
        name: server-config
        items:
          - key: NODE_ENV
            path: node_env

  containers:
    - name: server
      image: registry.hub.docker.com/moonlight8978/kube-demo:server
      imagePullPolicy: Always
      resources:
        limits:
          memory: 200Mi
          cpu: 0.4
        requests:
          memory: 100Mi
          cpu: 0.25
      ports:
        - containerPort: 3000
          name: "web-service"
      command: ["yarn", "start"]
      readinessProbe:
        httpGet:
          path: /healthcheck
          port: 3000
        initialDelaySeconds: 5
      env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: log.level
      envFrom:
        - configMapRef:
            name: server-config
      volumeMounts:
        - name: server-config
          mountPath: /etc/config
          readOnly: true
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: redis
#   namespace: kube-demo
# spec:
#   nodeSelector:
#     environment: staging
#   volumes:
#     - name: redis-data
#       persistentVolumeClaim:
#         claimName: task-pv-claim
#   containers:
#     - name: redis
#       image: redis
#       volumeMounts:
#         - name: redis-data
#           mountPath: /data/redis
#       resources:
#         limits:
#           memory: 200Mi
#           cpu: 0.4
#         requests:
#           memory: 100Mi
#           cpu: 0.25
